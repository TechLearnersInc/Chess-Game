version: '3.3'

services:
  # Main Application
  app-server:
    build:
      context: ./app-server
      dockerfile: Dockerfile
    container_name: chess-game_app-server
    restart: unless-stopped
    command: nodemon ./bin/www # node ./bin/www
    env_file:
      - ./env/app-server.env
    volumes:
      - ./app-server:/home/node/app
      - /home/node/app/node_modules
    depends_on:
      - redis-cache
      - socket-server
    networks:
      - chess-game-network

  # Gameserver Application
  socket-server:
    build:
      context: ./socket-server
      dockerfile: Dockerfile
    container_name: chess-game_socket-server
    restart: unless-stopped
    command: nodemon ./bin/www # node ./bin/www
    env_file:
      - ./env/socket-server.env
    volumes:
      - ./socket-server:/home/node/app
      - /home/node/app/node_modules
    depends_on:
      - redis-cache
      - redis-message-broker
    networks:
      - chess-game-network

  # Redis Cache for whole system
  redis-cache:
    build:
      context: ./docker/redis
      dockerfile: Dockerfile
    container_name: chess-game_redis-cache
    restart: unless-stopped
    volumes:
      - redis-cache-data:/data
    # logging:
    #   driver: none
    networks:
      - chess-game-network

  # Redis Message Broker for socket-server
  redis-message-broker:
    build:
      context: ./docker/redis
      dockerfile: Dockerfile
    container_name: chess-game_redis-message-broker
    restart: unless-stopped
    volumes:
      - redis-message-broker:/data
    # logging:
    #   driver: none
    networks:
      - chess-game-network

  # Redisinsight for Redis GUI Management
  redisinsight:
    image: redislabs/redisinsight:latest
    container_name: chess-game_redisinsight
    restart: unless-stopped
    ports:
      - '8001:8001'
    volumes:
      - redisinsight-data:/db
    # logging:
    #   driver: none
    networks:
      - chess-game-network

  # Reverse Proxy for whole system
  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    container_name: chess-game_nginx
    restart: unless-stopped
    ports:
      - '8080:80'
    env_file:
      - ./env/nginx.env
    depends_on:
      - app-server
      - socket-server
    # logging:
    #   driver: none
    networks:
      - chess-game-network

  live-logging:
    image: amir20/dozzle:latest
    container_name: chess-game_live-logging
    ports:
      - '1234:8080'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    logging:
      driver: none

volumes:
  redis-cache-data:
    name: chess-game_redis-cache

  redis-message-broker:
    name: chess-game_redis-message-broker

  redisinsight-data:
    name: chess-game_redisinsight

networks:
  chess-game-network:
    driver: bridge
